1. Reading Assignment: Please answer three questions below:
- What are the advantages of Polymorphism?
- How is Inheritance useful to achieve Polymorphism in Java?
- What are the differences between Polymorphism and Inheritance in Java?

2. Question: Alternatively, to compare items in the cart, instead of using the Comparator class I have
mentioned, you can use the Comparable interface1 and override the compareTo()method. You can
refer to the Java docs to see the information of this interface.
Suppose we are taking this Comparable interface approach.
- What class should implement the Comparable interface?
- In those classes, how should you implement the compareTo()method to reflect the ordering that
we want?
- Can we have two ordering rules of the item (by title then cost and by cost then title) if we use this
Comparable interface approach?
- Suppose the DVDs have a different ordering rule from the other media types, that is by title, then
decreasing length, then cost. How would you modify your code to allow this?

###############################################
1.
Ưu điểm của Polymorphism:
Độ linh hoạt (Flexibility): Polymorphism cho phép một đối tượng có thể được sử dụng như là một đối tượng của lớp cơ sở, giúp tăng tính linh hoạt của mã nguồn.

Tái sử dụng mã (Code Reusability): Nhờ vào tính chất kế thừa và interface, bạn có thể sử dụng các đối tượng của các lớp con trong các ngữ cảnh khác nhau mà không cần phải viết lại mã.

Dễ bảo trì (Ease of Maintenance): Khi bạn thêm mới lớp con, mã nguồn hiện tại sử dụng Polymorphism có thể vẫn hoạt động mà không cần thay đổi, giảm thiểu rủi ro làm hỏng mã nguồn hiện tại.

Inheritance trong Java và Ứng dụng Polymorphism:
Inheritance làm thế nào để đạt được Polymorphism:
Inheritance (kế thừa) cho phép một lớp con kế thừa thuộc tính và phương thức của lớp cha.
Polymorphism có thể được thực hiện thông qua việc sử dụng đối tượng của lớp con để thay thế đối tượng của lớp cha.
Sự khác biệt giữa Polymorphism và Inheritance trong Java:
Sự khác biệt giữa Polymorphism và Inheritance:
Polymorphism là khả năng của một đối tượng có thể thể hiện các hành vi khác nhau tùy thuộc vào ngữ cảnh sử dụng.
Inheritance là cơ chế mà một lớp mới có thể kế thừa các thuộc tính và phương thức của lớp cũ.
2.
Comparable Interface Approach:
Lớp nào nên triển khai Comparable interface:
Các lớp của đối tượng muốn so sánh.

Cách triển khai compareTo() để phản ánh thứ tự mong muốn:
Phải override phương thức compareTo() trong lớp triển khai Comparable.
Sử dụng logic so sánh trong phương thức để xác định thứ tự mong muốn.

Có thể có hai quy tắc sắp xếp khác nhau không:
Không, Comparable chỉ hỗ trợ một quy tắc sắp xếp duy nhất.

Sắp xếp khác nhau cho DVDs:
Có thể tạo một lớp mới cho DVDs và triển khai Comparable interface với logic so sánh theo tiêu chí mới (ví dụ: title, decreasing length, cost).
